1. In sorting algorithms, for sorting the list with the basic algorithms, the selection sort and insertion sort is good. We used the insertion sort for sorting larger data sets group activity. In insertion sort, we first pick any current element and then we insert that numbers according to it's previous and next numbers, that's what we did actually when we sorted the larger data sets without even thinking about any code or sorting method we naturally implemented that logic where we pick any number and rearranged it in proper order. And, for the slowest in sorting algorithms, I feel bubble sort is very slow and it is good for understanding sorting but some big drawbacks in terms of time complexity.

2. The sorting with the method of using two basic algorithms was usually helpful for our team. The combination of insertion sort and selection sort, is actually very useful because in sorting the set of numbers on papers first we find the smallest numbers and after finding few of them and arranging them into the right order, after that we start to pick the number and insert them into the created datasets.

3. The fastest time it took to sort the larger data sets was 2 minutes and 48 seconds. It took 3 minutes and 12 seconds to sort all the numbers.